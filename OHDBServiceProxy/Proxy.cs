//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

namespace OHDBServiceProxy
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpBinding_IService1", Namespace = "http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;

        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;

        private System.Threading.SendOrPostCallback AddTaskOperationCompleted;

        /// <remarks/>
        public Service1()
        {
            this.Url = "http://localhost:8082/Service/service1";
        }

        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;

        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;

        /// <remarks/>
        public event AddTaskCompletedEventHandler AddTaskCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetStatus", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetStatus()
        {
            object[] results = this.Invoke("GetStatus", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetStatus(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetStatus", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetStatusAsync()
        {
            this.GetStatusAsync(null);
        }

        /// <remarks/>
        public void GetStatusAsync(object userState)
        {
            if ((this.GetStatusOperationCompleted == null))
            {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[0], this.GetStatusOperationCompleted, userState);
        }

        private void OnGetStatusOperationCompleted(object arg)
        {
            if ((this.GetStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] CompositeType composite)
        {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                    composite});
            return ((CompositeType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDataUsingDataContract(CompositeType composite, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDataUsingDataContract", new object[] {
                    composite}, callback, asyncState);
        }

        /// <remarks/>
        public CompositeType EndGetDataUsingDataContract(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompositeType)(results[0]));
        }

        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite)
        {
            this.GetDataUsingDataContractAsync(composite, null);
        }

        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState)
        {
            if ((this.GetDataUsingDataContractOperationCompleted == null))
            {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                    composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }

        private void OnGetDataUsingDataContractOperationCompleted(object arg)
        {
            if ((this.GetDataUsingDataContractCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddTask", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTask(int dbTaskId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool dbTaskIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary", IsNullable = true)] byte[] file, out int AddTaskResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddTaskResultSpecified)
        {
            object[] results = this.Invoke("AddTask", new object[] {
                    dbTaskId,
                    dbTaskIdSpecified,
                    fileName,
                    file});
            AddTaskResult = ((int)(results[0]));
            AddTaskResultSpecified = ((bool)(results[1]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddTask(int dbTaskId, bool dbTaskIdSpecified, string fileName, byte[] file, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddTask", new object[] {
                    dbTaskId,
                    dbTaskIdSpecified,
                    fileName,
                    file}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAddTask(System.IAsyncResult asyncResult, out int AddTaskResult, out bool AddTaskResultSpecified)
        {
            object[] results = this.EndInvoke(asyncResult);
            AddTaskResult = ((int)(results[0]));
            AddTaskResultSpecified = ((bool)(results[1]));
        }

        /// <remarks/>
        public void AddTaskAsync(int dbTaskId, bool dbTaskIdSpecified, string fileName, byte[] file)
        {
            this.AddTaskAsync(dbTaskId, dbTaskIdSpecified, fileName, file, null);
        }

        /// <remarks/>
        public void AddTaskAsync(int dbTaskId, bool dbTaskIdSpecified, string fileName, byte[] file, object userState)
        {
            if ((this.AddTaskOperationCompleted == null))
            {
                this.AddTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaskOperationCompleted);
            }
            this.InvokeAsync("AddTask", new object[] {
                    dbTaskId,
                    dbTaskIdSpecified,
                    fileName,
                    file}, this.AddTaskOperationCompleted, userState);
        }

        private void OnAddTaskOperationCompleted(object arg)
        {
            if ((this.AddTaskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaskCompleted(this, new AddTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/Service")]
    public partial class CompositeType
    {

        private bool boolValueField;

        private bool boolValueFieldSpecified;

        private string stringValueField;

        /// <remarks/>
        public bool BoolValue
        {
            get
            {
                return this.boolValueField;
            }
            set
            {
                this.boolValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified
        {
            get
            {
                return this.boolValueFieldSpecified;
            }
            set
            {
                this.boolValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string StringValue
        {
            get
            {
                return this.stringValueField;
            }
            set
            {
                this.stringValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CompositeType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AddTaskCompletedEventHandler(object sender, AddTaskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int AddTaskResult
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool AddTaskResultSpecified
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}