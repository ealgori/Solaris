@using Intranet.Models
@model Intranet.Models.PORViewModel
@{
    ViewBag.Title = "POR Creation";
}
<script src="@Url.Content("~/Scripts/DynamicRowList/jquery.mvc-template-row.js")" type="text/javascript"></script>
<div class="content-loader content-back-white">
    <img class="loading-img" src='@Url.Content("~/Content/Images/MetroLoader.gif")' alt=" " />
</div>
@using (Ajax.BeginForm("CreatePor", "POR", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "Message", OnSuccess = "FormOnComplete" }))
{
    <div class="span12">
        <div class="row">
            <div class="span5">
                <h5>
                    Project
                </h5>
                @Html.EditorFor(m => m.ProjectId)
                @Html.ValidationMessageFor(m => m.ProjectId)
            </div>
            <div class="span2">
                <h5>
                    Work Start
                </h5>
                @Html.EditorFor(m => m.WorkStart)
                @Html.ValidationMessageFor(m => m.WorkStart)
            </div>
            <div class="span3">
                <h5>
                    Network
                </h5>
                @Html.EditorFor(m => m.Network)
                @Html.ValidationMessageFor(m => m.Network)
            </div>
        </div>
        <div class="row">
            <div class="span5">
                <h5>
                    Subcontracor
                </h5>
                @Html.EditorFor(m => m.SubcId)
                @Html.ValidationMessageFor(m => m.SubcId)
            </div>
            <div class="span2">
                <h5>
                    Work End
                </h5>
                @Html.EditorFor(m => m.WorkEnd)
                @Html.ValidationMessageFor(m => m.WorkEnd)
            </div>
            <div class="span3">
                <h5>
                    Activity
                </h5>
                @Html.EditorFor(m => m.Activity)
                @Html.ValidationMessageFor(m => m.Activity)
            </div>
            <div class="span3">
                <h5>
                    Total Price
                </h5>
                @Html.EditorFor(m => m.TotalPrice)
            </div>
        </div>
        <br />
        <div class="row">
            <div class="span8">
                @*        <input type="button" class="span2 btn btn-primary" id="SearchBtn" onclick="Search()" value="Search" />*@
                <input type="button" class="span2 btn btn-primary" id="AddRow" value="Add Row" />
                <input type="submit" class="span2 btn btn-primary" id="CreatePor" value="Create POR" />
                <br />
                <br />
                <div id="por-message">
                </div>
            </div>
        </div>
    </div>
    <div class="span8">
        <table class="table table-bordered" id="targetTable">
            <thead>
                <tr>
                    <th>
                        Code
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        Koeff
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @Html.EditorFor(model => Model.Items)
            </tbody>
        </table>
    </div>
  
     
}

<table id="mvcTemplateTable" style="display: none;">
    @{
        List<PORItemViewModel> Items = Model.Items;
        Items.Add(new PORItemViewModel() {});
    }
    @Html.EditorFor(m => Items)
</table>

<script type="text/javascript">
    var PositionList;
    $(document).ready(function () {
        DynamicList();
        kendo.culture("ru-RU");
        $("#Activity").width(200).kendoComboBox({
            dataTextField: "text",
            dataValueField: "value",
            placeholder: "Select...",
            dataSource:  {
                    transport: {
                        read: {
                            url: '@Url.Action("ActivityList", "Json")',
                            dataType: "json"
                        }
                    }
                },
            filter: "contains",
            //            height: 500,
            suggest: true
        });
        $("#NetworkId").width(200).kendoComboBox({
            dataTextField: "text",
            dataValueField: "value",
            placeholder: "Select...",
            dataSource:
                {
                    transport: {
                        read: {
                            url: '@Url.Action("NetworkList", "Json")',
                            dataType: "json"
                        }
                    }
                },
            filter: "contains",
            //            height: 500,
            suggest: true
        });
        $("#SubcId").width(350).kendoComboBox(
        {
            change: ClearTableContents,
            autoBind: false,
            dataTextField: "text",
            dataValueField: "value",
            filter: "contains",
            suggest: true,
            dataSource:
                {
                    transport: {
                        read: {
                            url: '@Url.Action("SubcList", "Json")',
                            dataType: "json"
                        }
                    }
                }
        });
        $("#ProjectId").width(350).kendoDropDownList(
        {
            change: ClearTableContents,
            dataTextField: "text",
            dataValueField: "value",
            dataSource:
                {
                    transport: {
                        read: {
                            url: '@Url.Action("ProjectList", "Json")',
                            dataType: "json"
                        }
                    }
                }
        });

        $("#TotalPrice").width(110).kendoNumericTextBox({
            decimals: 2,
            spinners: false
        });
        //дисаблим окошко с полной ценой
        $("#TotalPrice").data("kendoNumericTextBox").enable(false);
        function startChange() {
            ClearTableContents();
            var startDate = start.value(),
                        endDate = end.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }
        function endChange() {
            ClearTableContents();
            var endDate = end.value(),
                        startDate = start.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        var start = $("#WorkStart").width(110).kendoDatePicker({
            change: startChange
        }).data("kendoDatePicker");

        var end = $("#WorkEnd").width(110).kendoDatePicker({
            change: endChange
        }).data("kendoDatePicker");

        start.max(end.value());
        end.min(start.value());
        //Страница загружена
        PositionList = GetPositionList();
        PageLoaded()
    });
    function FormOnComplete(data) {
        $("#por-message").empty();
        $("#por-message").show();
        if (data.Success) {
            $("#por-message").append("<div class='alert alert-success'><button type='button' class='close' data-dismiss='alert'>×</button>" + data.Message + "<a href='" + data.Url + "'> Распечатать созданный ПОР.</a></div>");
            ClearTableContents();
        } else {
            $("#por-message").append("<div class='alert alert-error'><button type='button' class='close' data-dismiss='alert'>×</button>" + data.Message + "</div>");
        }
  

    }
    //Страница загружена
    function PageLoaded() {
        $(".content-loader").fadeOut();
        $(".content-loader").removeClass("content-back-white");
    }
    //Добавление новой строчки , инициализая элементов кендо
    function DynamicList() {
        $("#targetTable").mvcTemplateRow({
            onAddRowAfter: function (tr) {
                //you can re-initialise fields here or re-attach date pickers or other jQuery pluggins
                //                tr.find("input[name$=DecimalRegularExpression]").val('');
                var FieldName = GetFieldName(this.newPk);
                $("#" + FieldName + "PositionId").width(400).kendoComboBox({
                    dataTextField: "text",
                    dataValueField: "value",
                    placeholder: "Select...",
                    dataSource: PositionList,
                    filter: "contains",
                    height: 500,
                    suggest: true,
                    change: CodeOnChange
                });

                $("#" + FieldName + "Quantity").width(110).kendoNumericTextBox({
                    decimals: 4,
                    min: 0,
                    step: 0.01,
                    change: CodeOnChange
                });
                $("#" + FieldName + "Koeff").width(110).kendoNumericTextBox({
                    decimals: 4,
                    min: 0,
                    change: CodeOnChange
                });
                $("#" + FieldName + "Price").width(110).kendoNumericTextBox({
                    decimals: 2,
                    spinners: false
                });
                //дисаблим окошко с ценой
                $("#" + FieldName + "Price").data("kendoNumericTextBox").enable(false);
                //скрываем окошко с кастомной ценой
                $("#window0").kendoWindow({
                    modal: true,
                    width: "500px",
                    height: "500px",
                    draggable: false,
                    resizable: false,
                    actions: ["Close"],
                    visible: false,
                    title: "Define custom Code",
                    //appendTo: "#mainForm"
                    open: function (e) {
                    }
                });
            }
        });

        $("#AddRow").click(function () {
            $("#por-message").empty();
            $("#targetTable").mvcTemplateRow('addRow');
            return false;
        });

        $("#targetTable .delete").live('click', function () {
            var $tr = $(this).parents("tr");
            $("#targetTable").mvcTemplateRow('deleteRow', $tr);
            CalculateTotalPORPrice();
            return false;
        });
    }
    //Удаление все строк из таблицы при изменении входных данных
    function ClearTableContents() {
        $(".content-loader").show();
        SetPorTotalPriceValue(0);
        var $tr = $("#targetTable").find("tr:gt(0)");
        $.each($tr, function (key, value) {
            $("#targetTable").mvcTemplateRow('deleteRow', $tr);
        });
        PositionList = GetPositionList();
        $(".content-loader").fadeOut();
    }
    //Обновление списка позиций при изменении параметров
    function GetPositionList() {
        var calb = null;
        var d = { SubcId: $("#SubcId").val(), ProjectId: $("#ProjectId").val(), WorkStart: $("#WorkStart").val(), WorkEnd: $("#WorkEnd").val() };
        $.ajax({
            type: "POST",
            url: '@Url.Action("PositionList", "Json")',
            contentType: "application/json",
            async: false,
            data: JSON.stringify(d),
            success: function (response) {
                calb = eval(response);
            }
        });
        return calb;
    }
    //Определение имени поля
    //Items зашито в конструкторе Js файла jquery.mvc-template-row.js
    function GetFieldName(pk) {
        return "Items_" + Math.abs(pk) + "__";
    }
    //Событие изменения кода позиции в конкретной строке
    function CodeOnChange() {
        if (this.value() && this.selectedIndex == -1) {                    
               // var dt = this.dataSource._data[0];                
                this.text('');        
                this._selectItem();                
            }
        
        var tr = $("#" + this.element.attr("id")).closest('tr');
        var key = tr.attr('pk');
        var FieldName = GetFieldName(key)
        var price = GetCodeTotalPrice(FieldName);
        var numerictextbox = $("#" + FieldName + "Price").data("kendoNumericTextBox");
        numerictextbox.value(price);
        CalculateTotalPORPrice();
    }
    //Получение цены для конкретной позиции с учетом коэф-та и количества
    function GetCodeTotalPrice(FieldName) {
        var calb = null;
        var d = { SubcId: $("#SubcId").val(), ProjectId: $("#ProjectId").val(),
            WorkStart: $("#WorkStart").val(), WorkEnd: $("#WorkEnd").val(),
            PriceListId: $("#" + FieldName + "PositionId").val(),
            Quantity: $("#" + FieldName + "Quantity").val(),
            Coeff: $("#" + FieldName + "Koeff").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCodeTotalPrice", "POR")',
            contentType: "application/json",
            async: false,
            data: JSON.stringify(d),
            success: function (response) {
                calb = eval(response);
            }
        });
        return calb;
    }
    function CalculateTotalPORPrice() {
        var Sum = 0;
        var Table = $("#targetTable");
        var d = Table.find('input[name*="Price"]');
        d.each(function (key) {
            var numerictextbox = $("#" + this.id).data("kendoNumericTextBox");
            Sum += numerictextbox.value();
        });
        SetPorTotalPriceValue(Sum);
    }
    function SetPorTotalPriceValue(value)
    {
        var k = $("#TotalPrice").data("kendoNumericTextBox");
        k.value(value);
    }
</script>
